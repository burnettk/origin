
Git tips that are tested:

Create a new filesystem repository ready for receiving commits:

cd /home/mhotchkiss  //Not the best place for administration and backup

mkdir origin
cd origin
git init --bare

The repository has been created but now needs a client to serve files 
to it for the first time.

Clone the repo and then make changes by adding existing projects.

git clone origin my_local_repo
cd my_local_repo
git status

Add some original projects. If you try to branch without any
projects it complains. So add some files to the master branch
and push them before trying to branch.

cp -r ~/code_backup/* .
git status

You should see a bunch of untracked files. Add them.

git add *
git status

If the status looks good, commit.

git commit <Add comments>

git status

Create your own local branch to make changes to and make them

git checkout -b my_new_branch

Edit files, add files, then

git status

Add any files not tracked or edited, 

git add *

git status

Check again before the commit. If things look good

git commit <Add comment>

Now you have a branch that needs to merge to master

I have a question on this process. Do you have to 
checkout master to perform the merge? I think you do.


